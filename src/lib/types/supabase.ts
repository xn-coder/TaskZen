// This file should be generated by running:
// npx supabase gen types typescript --project-id YOUR_PROJECT_ID > src/lib/types/supabase.ts
// Replace YOUR_PROJECT_ID with your actual Supabase project ID.

// Placeholder content:
export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export interface Database {
  public: {
    Tables: {
      profiles: {
        Row: {
          avatar_url: string | null
          created_at: string | null
          email: string | null
          id: string
          name: string | null
          updated_at: string | null
        }
        Insert: {
          avatar_url?: string | null
          created_at?: string | null
          email?: string | null
          id: string
          name?: string | null
          updated_at?: string | null
        }
        Update: {
          avatar_url?: string | null
          created_at?: string | null
          email?: string | null
          id?: string
          name?: string | null
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "profiles_id_fkey"
            columns: ["id"]
            referencedRelation: "users"
            referencedColumns: ["id"]
          }
        ]
      }
      tasks: {
        Row: {
          assignee_ids: string[] | null
          comments: Json | null
          created_at: string | null
          created_by_id: string
          description: string | null
          due_date: string | null
          id: string
          priority: string
          status: string
          title: string
          updated_at: string | null
        }
        Insert: {
          assignee_ids?: string[] | null
          comments?: Json | null
          created_at?: string | null
          created_by_id: string
          description?: string | null
          due_date?: string | null
          id?: string
          priority: string
          status: string
          title: string
          updated_at?: string | null
        }
        Update: {
          assignee_ids?: string[] | null
          comments?: Json | null
          created_at?: string | null
          created_by_id?: string
          description?: string | null
          due_date?: string | null
          id?: string
          priority?: string
          status?: string
          title?: string
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "tasks_created_by_id_fkey"
            columns: ["created_by_id"]
            referencedRelation: "users"
            referencedColumns: ["id"]
          }
        ]
      }
    }
    Views: {
      [_ in never]: never
    }
    Functions: {
      [_ in never]: never
    }
    Enums: {
      [_ in never]: never
    }
    CompositeTypes: {
      [_ in never]: never
    }
  }
}

// The following types are aliases for convenience from your provided lib/types.ts
// It's generally better to use the generated types directly from Supabase (`Database['public']['Tables']['...']['Row']`)
// but these are kept for compatibility during transition if used elsewhere.

export type Profile = Database['public']['Tables']['profiles']['Row'];

export type TaskStatus = "To Do" | "In Progress" | "Done" | "Overdue"; // "Overdue" is client-calculated
export type TaskPriority = "Low" | "Medium" | "High";

export interface Comment {
  userId: string;
  userName: string;
  text: string;
  createdAt: string; // ISO string
}
